kind: Namespace
apiVersion: v1
metadata:
    name: postgres
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ondat-replicated
provisioner: csi.storageos.com # Provisioner when using CSI
parameters:
  csi.storage.k8s.io/fstype: ext4
  storageos.com/replicas: "1" # Enforces 1 replica for the Volume

  # Change the Namespace below if Ondat doesn't run in kube-system
  csi.storage.k8s.io/node-publish-secret-namespace: storageos       # Namespace that runs Ondat Daemonset
  csi.storage.k8s.io/provisioner-secret-namespace: storageos        # Namespace that runs Ondat Daemonset
  csi.storage.k8s.io/controller-publish-secret-namespace: storageos # Namespace that runs Ondat Daemonset
  csi.storage.k8s.io/node-publish-secret-name: csi-node-publish-secret
  csi.storage.k8s.io/provisioner-secret-name: csi-provisioner-secret
  csi.storage.k8s.io/controller-publish-secret-name: csi-controller-publish-secret
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-ondat
  namespace: postgres
  labels:
      storageos.com/replicas: "1"
spec:
  storageClassName: "ondat-replicated"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      schedulerName: stork
      containers:
      - name: postgres
        image: postgres:9.5
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: pgbench
        - name: PGUSER
          value: pgbench
        - name: POSTGRES_PASSWORD
          value: superpostgres
        - name: PGBENCH_PASSWORD
          value: superpostgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-ondat
